# User configuration sourced by interactive shells
#

# -----------------
# Update path, pt.1
# -----------------

path+=($XDG_BIN_HOME)

# pnpm
export PNPM_HOME="$XDG_DATA_HOME/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PATH:$PNPM_HOME" ;;
esac
# pnpm end

# -----------------
# Zsh configuration
# -----------------

#
# Input/output
#

# Set editor default keymap to emacs
bindkey -e

# Prompt for spelling correction of commands.
setopt CORRECT

# Customize spelling correction prompt.
export SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [Nyae]? '

# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]/}

# -----------------
# Zim configuration
# -----------------

# Use degit instead of git as the default tool to install and update modules.
zstyle ':zim:zmodule' use 'degit'
zstyle ':zim' disable-version-check yes

# --------------------
# Module configuration
# --------------------

#
# git
#

# Set a custom prefix for the generated aliases. The default prefix is 'G'.
#zstyle ':zim:git' aliases-prefix 'g'

#
# input
#

# Append `../` to your input for each `.` you type after an initial `..`
zstyle ':zim:input' double-dot-expand yes

#
# gpg-agent
#

# GPG Verification
export GPG_TTY=$TTY

#
# ssh-agent
#

# SSH
zstyle :omz:plugins:ssh-agent ssh-add-args --apple-load-keychain

#
# fzf
#

zstyle ':fzf-tab:*' fzf-flags --style=full --height=-2
zstyle ':fzf-tab:*' switch-group '<' '>'

#
# completions
#

# Fuzzy
zstyle ':completion::complete:*' cache-path $XDG_CACHE_HOME/zsh/zcompcache
zstyle ":completion:*" completer _complete _match _approximate
zstyle ":completion:*:match:*" original only
zstyle -e ":completion:*:approximate:*" max-errors "reply=($((($#PREFIX + $#SUFFIX) / 3 > 7 ? 7 : ($#PREFIX + $#SUFFIX) / 3))numeric)"

# Pretty
zstyle ":completion:*" matcher-list "m:{a-zA-Z}={A-Za-z}" "r:|[._-]=* r:|=*" "l:|=* r:|=*"
zstyle ":completion:*" list-separator ""
zstyle ":completion:*" rehash true
zstyle ":completion:*" format '%d'
zstyle ":completion:*:options" auto-description "%d"

# Disable sorted completions for presorted completions
zstyle ":completion:*:git-checkout:*" sort false
zstyle ':completion:complete:git-commit:option--fixup-1' sort false
zstyle ':completion:*:eza' sort false
zstyle ':completion:files' sort false

#
# fzf-tab
#

# Previews
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:complete:eza:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:complete:bat:*' fzf-preview 'bat --color=always --theme=base16 $realpath'
zstyle ':fzf-tab:complete:nano:*' fzf-preview 'bat --color=always --theme=base16 $realpath'
zstyle ':fzf-tab:complete:micro:*' fzf-preview 'bat --color=always --theme=base16 $realpath'
zstyle ':fzf-tab:complete:git:*' fzf-preview 'git log --color=always --pretty=oneline --abbrev-commit --graph $realpath 2>/dev/null || eza -1 --color=always $realpath'
zstyle ':fzf-tab:complete:kill:*' fzf-preview 'ps -f -p $word'
zstyle ':fzf-tab:complete:(diff|rm|cp|mv):*' fzf-preview 'eza -1 --color=always $realpath'

#
# zsh-autosuggestions
#

# Disable automatic widget re-binding on each precmd. This can be set when
# zsh-users/zsh-autosuggestions is the last module in your ~/.zimrc.
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# Set suggestion strategy to history with fallback to completions.
export ZSH_AUTOSUGGEST_STRATEGY=(completion) # Atuin automatically adds itself.

#
# zsh-syntax-highlighting
#

# Set what highlighters will be used.
export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets cursor)

# ------------------
# Initialize modules
# ------------------

autoload -z compinit

ZIM_HOME=~/.zim
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! $ZIM_HOME/init.zsh -nt ~/.zimrc ]]; then
  local HOMEBREW_ZIM="${HOMEBREW_PREFIX:-'/opt/homebrew'}/opt/zimfw/share/zimfw.zsh"
  local LOCAL_ZIM="${HOME}/.zim/zimfw.zsh"

  if [[ -f $HOMEBREW_ZIM ]]; then
    source $HOMEBREW_ZIM init
  elif [[ -f $LOCAL_ZIM ]]; then
    source $LOCAL_ZIM init
  fi
fi
# Initialize modules.
source $ZIM_HOME/init.zsh

# ------------------------------
# Post-init module configuration
# ------------------------------

fpath=(
  /usr/share/zsh/5.9/functions # Put zsh-specific completions before Homebrew.
  $fpath
  ~/.zfunc # An escape hatch for completing local projects.
)

# # Override some settings from the completion module in favor of fzf-tab.
zstyle ":completion:*" menu no
zstyle ":completion:*:corrections" format "%d (errors: %e)"
zstyle ":completion:*:messages" format "%d"
zstyle ":completion:*:warnings" format "%F{red}-- no matches found --%f"
zstyle ":completion:*:default" list-prompt "%S%M matches%s"
zstyle -d ":completion:*" format
zstyle -d ":completion:*:descriptions" format
zstyle ":completion:*:descriptions" format "%d"
# shellcheck disable=SC2086,SC2296
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS} # On macOS, don't use `:default` for this.

# Completions for Dart CLIs via `pkg:pub/cli_completion`:
## [Completion]
## Completion scripts setup. Remove the following line to uninstall
if [[ -f "$XDG_CONFIG_HOME/.dart-cli-completion/zsh-config.zsh" ]]; then
  source "$XDG_CONFIG_HOME/.dart-cli-completion/zsh-config.zsh"
fi
## [/Completion]

# Oils
OILS_HIJACK_SHEBANG="$(command -v osh)"
export OILS_HIJACK_SHEBANG

# Deno
export DENO_FUTURE=1

# Android
export ANDROID_HOME="$HOME/Library/Android/sdk"

# Update path, pt.2
path=(
  $HOMEBREW_PREFIX/opt/curl/bin                                 # Curl
  $path
  "$HOME/Library/Application Support/JetBrains/Toolbox/scripts" # IntelliJ
  $HOMEBREW_PREFIX/opt/rustup/bin                               # Rustup
  $CARGO_HOME/bin                                               # Cargo
  $HOME/.pub-cache/bin                                          # Dart
  $ANDROID_HOME/tools/bin                                       # Android
  $ANDROID_HOME/cmdline-tools/latest/bin                        # More Android
  $ANDROID_HOME/platform-tools                                  # Yet more Android
  $HOME/.deno/bin                                               # Deno
  $HOMEBREW_PREFIX/opt/python@3.13/libexec/bin                  # Python
)

cdpath+=("$HOME/Developer")

# JJ
export JJ_CONFIG="$XDG_CONFIG_HOME/jj/config.toml"

# Mise
export MISE_NODE_COREPACK=1

# Node Compile Cache
export NODE_COMPILE_CACHE="$XDG_CACHE_HOME/nodejs-compile-cache"

# Enable colors
export CLICOLOR=1

# ZMods
zmodload -a colors
zmodload -a autocomplete
zmodload -a complist

# Globbing and completions
setopt extended_glob
setopt dot_glob
setopt complete_in_word

# Nice tweaks
setopt auto_cd              # Use cd by typing directory name if it's not a command.
setopt auto_list            # Automatically list choices on ambiguous completion.
setopt auto_pushd           # Make cd push the old directory onto the directory stack.
setopt bang_hist            # Treat the '!' character, especially during Expansion.
setopt interactive_comments # Comments even in interactive shells.
setopt multios              # Implicit tees or cats when multiple redirections are attempted.
setopt prompt_subst         # Substitution of parameters inside the prompt each time the prompt is drawn.
setopt pushd_ignore_dups    # Don't push multiple copies directory onto the directory stack.

# Shhhhâ€¦
setopt no_beep

# Functions
autoload -Uz zmv zcalc

# More Zinit managed installations.

# ## Install Roc
# zinit wait lucid from'gh-r' nocompile'' for \
#   as'program' \
#   extract'!-' \
#   pick'roc' \
#   pick'roc_language_server' \
#   @roc-lang/roc

# ## Install Lamdera
# zinit wait lucid for id-as'lamdera' \
#   as'program' \
#   dl'https://static.lamdera.com/bin/lamdera-1.3.2-macos-arm64 -> lamdera' \
#   pick'lamdera' \
#   nocompile'' \
#   @zdharma-continuum/null

### Enable the Turborepo TUI
export TURBO_UI=1

## fzf
export FZF_DEFAULT_OPTS="--style=full"

## Set personal aliases
### For a full list of active aliases, run `alias`.
# shellcheck source=./aliases.zsh
source ~/.local/share/aliases.zsh
# shellcheck source=./functions.zsh
source ~/.local/share/functions.zsh

if [[ $TERM_PROGRAM != "WarpTerminal" ]] && [[ $TERMINAL_EMULATOR != "JetBrains-JediTerm" ]]; then
  please
fi

# Work around starship/starship#560
precmd() { precmd() { echo "" } }
alias clear="precmd() { precmd() { echo } } && clear"

export YSU_IGNORED_ALIASES=("zi" "zplg" "zpl" "zini") # Ignore zplug and zi aliases
